<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.zway.fic.kanban.dao.CardDao">
    <resultMap id="BaseResultMap" type="top.zway.fic.base.entity.doo.CardDO">
        <id column="card_id" jdbcType="BIGINT" property="cardId" />
        <result column="order_in_column" jdbcType="INTEGER" property="orderInColumn" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="column_id" jdbcType="BIGINT" property="columnId" />
        <result column="kanban_id" jdbcType="BIGINT" property="kanbanId" />
        <result column="content" jdbcType="VARCHAR" property="content" />
        <result column="is_tagged" jdbcType="TINYINT" property="tagged" />
        <result column="update_user" jdbcType="BIGINT" property="updateUser" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    </resultMap>
    <sql id="Base_Column_List">
        card_id, order_in_column, update_time, column_id, kanban_id, content, is_tagged,
    update_user, create_time
    </sql>
    <insert id="insert" useGeneratedKeys="true" keyProperty="cardId" keyColumn="card_id">
        insert into card (order_in_column,column_id, kanban_id,
                          content, is_tagged, update_user
        )
        values ( #{orderInColumn}, #{columnId}, #{kanbanId},
                #{content}, #{tagged}, #{updateUser} )
    </insert>
    <update id="updateBaseInfo">
        update card
        set update_time = CURRENT_TIMESTAMP,
            content = #{content},
            update_user = #{updateUser}
        where card_id = #{cardId}
    </update>
    <update id="setOrder">
        update card
        set order_in_column = #{order}
        where card_id = #{cardId}
    </update>
    <update id="transferCard">
        update card
        set update_time = CURRENT_TIMESTAMP,
            order_in_column = #{order},
            column_id = #{columnId}
        where card_id = #{cardId}
    </update>
    <update id="updateTaggedState">
        update card
        set is_tagged = #{tagged}
        where card_id = #{cardId}
    </update>
    <delete id="delete">
        delete from card
        where card_id = #{cardId}
    </delete>
    <delete id="deleteByColumnId">
        delete from card
        where column_id = #{columnId}
    </delete>
    <delete id="deleteByKanbanId">
        delete from card
        where kanban_id = #{kanbanId}
    </delete>
    <select id="getLastOrder" resultType="java.lang.Double">
        SELECT
            max( order_in_column )
        FROM
            card
        WHERE
            column_id = #{columnId}
    </select>
    <select id="getKanbanIdByCardId" resultType="java.lang.Long">
        SELECT
            kanban_id
        FROM
            card
        WHERE
            card_id = #{cardId}
    </select>
    <select id="listCardIdByColumnId" resultType="java.lang.Long">
        SELECT
            card_id
        FROM
            card
        WHERE
            column_id = #{columnId}
    </select>
    <select id="listCardIdByKanbanId" resultType="java.lang.Long">
        select
            card_id
        from card
        where kanban_id = #{kanbanId}
    </select>
    <select id="getSortedOrderAfterOrBefore" resultType="java.lang.Double">
        SELECT
        order_in_column
        FROM
        card
        WHERE
        column_id = #{columnId}
        AND order_in_column
        <if test="down">
            &gt;=
        </if>
        <if test="!down">
            &lt;=
        </if>
        ( SELECT order_in_column FROM card WHERE card_id = #{cardId} )
        ORDER BY
        order_in_column
        <if test="down">
            ASC
        </if>
        <if test="!down">
            DESC
        </if>
        LIMIT 0,#{getSize}
    </select>
    <select id="getColumnIdByCardId" resultType="java.lang.Long">
        select
            column_id
        from card
        where card_id = #{cardId}
    </select>

    <select id="selectByColumnIdOrdered" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from card
        where column_id = #{ColumnId}
        order by order_in_column asc
    </select>
</mapper>